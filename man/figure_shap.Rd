% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Figure.R
\name{figure_shap}
\alias{figure_shap}
\title{Generate and Plot SHAP Explanation Figures}
\usage{
figure_shap(
  data,
  raw_data_path,
  output_file,
  model_type = "xgboost",
  output_type = "pdf",
  target_type = c("diagnosis", "prognosis")
)
}
\arguments{
\item{data}{A list object containing model evaluation results. It must contain
\code{sample_score}, which is a data frame with at least "sample" (or "ID") and "score" columns.}

\item{raw_data_path}{String, the file path to the original feature data in CSV format.
The first column of this CSV should be the sample ID (matching "sample" or "ID" in \code{data$sample_score}).}

\item{output_file}{String, the base name for the output filename (without extension).}

\item{model_type}{String, specifies the type of surrogate model to train for SHAP
value calculation. Options: "xgboost" (default) or "lasso".}

\item{output_type}{String, the desired output file format. Options: "pdf", "png", "svg".
Defaults to "pdf".}

\item{target_type}{String, indicates whether the SHAP analysis is for a
"diagnosis" or "prognosis" model. This helps in correctly identifying and
excluding non-feature columns (like "label", "outcome", "time") from the raw data.}
}
\value{
NULL. The function saves a combined plot (SHAP beeswarm and importance bar chart)
to the specified output file.
}
\description{
Trains a surrogate model (XGBoost or Lasso) to approximate the original
model's output scores. It then calculates and visualizes SHAP (SHapley Additive
exPlanations) values to explain each feature's contribution to the
surrogate model's predictions, thereby providing insights into the
original model's behavior.
}
\examples{
\dontrun{
# Create dummy raw data and model evaluation results for demonstration
# For diagnostic model:
set.seed(123)
dummy_raw_dia_data <- data.frame(
  sample = paste0("S", 1:100),
  featureA = rnorm(100),
  featureB = runif(100),
  featureC = sample(1:10, 100, replace = TRUE),
  label = sample(c(0, 1), 100, replace = TRUE) # Example label column
)
write.csv(dummy_raw_dia_data, "dummy_raw_dia_data.csv", row.names = FALSE)

dummy_eval_dia_results <- list(
  sample_score = data.frame(
    sample = paste0("S", 1:100),
    score = runif(100, 0, 1) # Example model scores
  )
)

# Run SHAP for a diagnostic model
figure_shap(data = dummy_eval_dia_results,
            raw_data_path = "dummy_raw_dia_data.csv",
            output_file = "Diagnostic_SHAP_XGBoost",
            model_type = "xgboost",
            output_type = "pdf",
            target_type = "diagnosis")

# For prognostic model:
dummy_raw_pro_data <- data.frame(
  ID = paste0("P", 1:100),
  gene1 = rnorm(100),
  gene2 = runif(100),
  clinic_var = sample(c(10, 20), 100, replace = TRUE),
  time = runif(100, 50, 1000), # Example time column
  outcome = sample(c(0, 1), 100, replace = TRUE) # Example outcome column
)
write.csv(dummy_raw_pro_data, "dummy_raw_pro_data.csv", row.names = FALSE)

dummy_eval_pro_results <- list(
  sample_score = data.frame(
    ID = paste0("P", 1:100),
    score = runif(100, 0, 1) # Example model scores
  )
)

# Run SHAP for a prognostic model
figure_shap(data = dummy_eval_pro_results,
            raw_data_path = "dummy_raw_pro_data.csv",
            output_file = "Prognostic_SHAP_Lasso",
            model_type = "lasso",
            output_type = "png",
            target_type = "prognosis")

# Clean up dummy files
unlink("dummy_raw_dia_data.csv")
unlink("dummy_raw_pro_data.csv")
}
}
