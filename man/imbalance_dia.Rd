% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diagnosis.R
\name{imbalance_dia}
\alias{imbalance_dia}
\title{Train an EasyEnsemble Model for Imbalanced Classification}
\usage{
imbalance_dia(
  data_path,
  label_col_name,
  base_model_name = "xb",
  n_estimators = 10,
  tune_base_model = FALSE,
  threshold_choices = "default",
  positive_label_value = 1,
  negative_label_value = 0,
  new_positive_label = "Positive",
  new_negative_label = "Negative",
  seed = 456
)
}
\arguments{
\item{data_path}{A character string, the file path to the input CSV data.}

\item{label_col_name}{A character string, the name of the column containing
the class labels.}

\item{base_model_name}{A character string, the name of the base diagnostic
model to use (e.g., "xb", "rf"). This model must be registered.}

\item{n_estimators}{An integer, the number of base models to train (number of subsets).}

\item{tune_base_model}{Logical, whether to enable tuning for each base model.}

\item{threshold_choices}{A character string (e.g., "f1", "youden", "default")
or a numeric value (0-1) for determining the evaluation threshold for the ensemble.}

\item{positive_label_value}{A numeric or character value in the raw data
representing the positive class.}

\item{negative_label_value}{A numeric or character value in the raw data
representing the negative class.}

\item{new_positive_label}{A character string, the desired factor level name
for the positive class (e.g., "Positive").}

\item{new_negative_label}{A character string, the desired factor level name
for the negative class (e.g., "Negative").}

\item{seed}{An integer, for reproducibility.}
}
\value{
A list containing:
\itemize{
\item \code{model_object}: A list describing the ensemble model, including
the base model name, number of estimators, and all trained base model objects.
\item \code{sample_score}: A data frame with \code{sample} (ID), \code{label} (original numeric),
and aggregated \code{score} (probability) from the EasyEnsemble model.
\item \code{evaluation_metrics}: Performance metrics for the EasyEnsemble model.
}
}
\description{
Implements the EasyEnsemble algorithm for imbalanced classification.
It trains multiple base models on balanced subsets of the training data (by
undersampling the majority class) and aggregates their predictions by averaging
probabilities.
}
\examples{
\dontrun{
# 1. Create dummy imbalanced data (e.g., 1:9 ratio)
set.seed(123)
dummy_imbalanced_data <- data.frame(
  ID = paste0("Patient", 1:100),
  FeatureA = rnorm(100),
  FeatureB = runif(100, 0, 100),
  Disease_Status = sample(c(0, 1), 100, replace = TRUE, prob = c(0.9, 0.1))
)
write.csv(dummy_imbalanced_data, "dummy_imbalanced_data.csv", row.names = FALSE)

# 2. Initialize the modeling system
initialize_modeling_system_dia()

# 3. Run EasyEnsemble with XGBoost as base model
# easyensemble_results <- imbalance_dia(
#   data_path = "dummy_imbalanced_data.csv",
#   label_col_name = "Disease_Status",
#   base_model_name = "xb",
#   n_estimators = 5, # Use a small number for example speed
#   threshold_choices = "f1",
#   positive_label_value = 1,
#   negative_label_value = 0,
#   new_positive_label = "Case",
#   new_negative_label = "Control"
# )
# print_model_summary_dia("EasyEnsemble (XGBoost)", easyensemble_results)

# 4. Clean up
# unlink("dummy_imbalanced_data.csv")
}
}
\seealso{
\code{\link{initialize_modeling_system_dia}}, \code{\link{register_model_dia}},
\code{\link{load_and_prepare_data_dia}}, \code{\link{evaluate_model_dia}}
}
