% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diagnosis.R
\name{run_models_dia}
\alias{run_models_dia}
\title{Run Multiple Diagnostic Models}
\usage{
run_models_dia(
  data_path,
  label_col_name = "outcome",
  model = "all_dia",
  tune = FALSE,
  seed = 123,
  threshold_choices = "default",
  positive_label_value = 1,
  negative_label_value = 0,
  new_positive_label = "Positive",
  new_negative_label = "Negative"
)
}
\arguments{
\item{data_path}{A character string, the file path to the input CSV data.}

\item{label_col_name}{A character string, the name of the column containing
the class labels.}

\item{model}{A character string or vector of character strings, specifying
which models to run. Use "all_dia" to run all registered models.}

\item{tune}{Logical, whether to enable hyperparameter tuning for individual models.}

\item{seed}{An integer, for reproducibility of random processes.}

\item{threshold_choices}{A character string (e.g., "f1", "youden", "default")
or a numeric value (0-1), or a named list/vector allowing different threshold
strategies/values for each model.}

\item{positive_label_value}{A numeric or character value in the raw data
representing the positive class.}

\item{negative_label_value}{A numeric or character value in the raw data
representing the negative class.}

\item{new_positive_label}{A character string, the desired factor level name
for the positive class (e.g., "Positive").}

\item{new_negative_label}{A character string, the desired factor level name
for the negative class (e.g., "Negative").}
}
\value{
A named list, where each element corresponds to a run model and
contains its trained \code{model_object}, \code{sample_score} data frame, and
\code{evaluation_metrics}.
}
\description{
Trains and evaluates one or more diagnostic models on the provided
dataset. Models must be registered with the system using \code{register_model_dia()}.
}
\examples{
\dontrun{
# 1. Create a dummy CSV file
set.seed(123)
dummy_data <- data.frame(
  ID = paste0("Patient", 1:100),
  FeatureA = rnorm(100),
  FeatureB = runif(100, 0, 100),
  FeatureC = sample(c("X", "Y", "Z"), 100, replace = TRUE),
  Disease_Status = sample(c(0, 1), 100, replace = TRUE)
)
write.csv(dummy_data, "dummy_diagnosis_data.csv", row.names = FALSE)

# 2. Initialize the modeling system to register default models
initialize_modeling_system_dia()

# 3. Run selected models
# results <- run_models_dia(
#   data_path = "dummy_diagnosis_data.csv",
#   label_col_name = "Disease_Status",
#   model = c("rf", "lasso"), # Run only Random Forest and Lasso
#   threshold_choices = list(rf = "f1", lasso = 0.6), # Different thresholds
#   positive_label_value = 1,
#   negative_label_value = 0,
#   new_positive_label = "Case",
#   new_negative_label = "Control",
#   seed = 42
# )

# 4. Print summaries
# for (model_name in names(results)) {
#   print_model_summary_dia(model_name, results[[model_name]])
# }

# 5. Clean up
# unlink("dummy_diagnosis_data.csv")
}
}
\seealso{
\code{\link{initialize_modeling_system_dia}}, \code{\link{register_model_dia}},
\code{\link{load_and_prepare_data_dia}}, \code{\link{evaluate_model_dia}},
\code{\link{print_model_summary_dia}}
}
